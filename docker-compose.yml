version: '3.8'

services:

  microservicio_productos:
    build:
      context: ./microservicio_productos
      dockerfile: Dockerfile
    container_name: microservicio_productos
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-ecomerce.cj4k2kme62ll.eu-north-1.rds.amazonaws.com:3306/market
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root1234.p
      SERVER_PORT: 8084
    ports:
      - "8084:8084"

    networks:
      - ecommerce-network

  microservice_clientes:
    build:
      context: ./microservice-clientes
      dockerfile: Dockerfile-clientes
    container_name: microservice_clientes
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-ecomerce.cj4k2kme62ll.eu-north-1.rds.amazonaws.com:3306/market
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root1234.p
      SERVER_PORT: 8080
    ports:
      - "8080:8080"

    networks:
      - ecommerce-network

  microservicio_pedidos:
    build:
      context: ./microservicio_pedidos
      dockerfile: Dockerfile-pedidos
    container_name: microservicio_pedidos
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-ecomerce.cj4k2kme62ll.eu-north-1.rds.amazonaws.com:3306/market
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root1234.p
      SERVER_PORT: 8002
    ports:
      - "8002:8002"

    networks:
      - ecommerce-network
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - ecommerce-network
    depends_on:
      - microservicio_productos
      - microservice_clientes
      - microservicio_pedidos

networks:
  ecommerce-network:
    driver: bridge
